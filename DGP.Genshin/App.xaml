<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:s="clr-namespace:DGP.Genshin.Control.Infrastructure.SmoothScrollViewer"
    xmlns:c="clr-namespace:DGP.Genshin.Control.Infrastructure.CachedImage"
    xmlns:ge="clr-namespace:DGP.Genshin.Control.GenshinElement" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:DGP.Genshin.Control.Converter"
    xmlns:markdown="clr-namespace:DGP.Genshin.Control.Infrastructure.Markdown"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    x:Class="DGP.Genshin.App"
    ShutdownMode="OnExplicitShutdown">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WPFUI;component/Styles/WPFUI.xaml" />
                <!--Insert after WPFUI to let correct style apply-->
                <ui:ThemeResources>
                    <ui:ThemeResources.ThemeDictionaries>
                        <ResourceDictionary x:Key="Light">
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/DGP.Genshin;component/Control/ModernStyle/Light.xaml"/>
                                <ResourceDictionary Source="pack://application:,,,/DGP.Genshin;component/Control/WPFUIStyle/Light.xaml"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="Dark">
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/DGP.Genshin;component/Control/ModernStyle/Dark.xaml"/>
                                <ResourceDictionary Source="pack://application:,,,/DGP.Genshin;component/Control/WPFUIStyle/Dark.xaml"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </ui:ThemeResources.ThemeDictionaries>
                </ui:ThemeResources>
                <ui:XamlControlsResources/>
                <ui:IntellisenseResources/>
                <!--merged dictionaries here -->
                <ResourceDictionary Source="pack://application:,,,/DGP.Genshin;component/Control/Infrastructure/Markdown/MarkdownStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DGP.Genshin;component/Control/TaskbarIconResources.xaml"/>

                <ResourceDictionary Source="pack://application:,,,/DGP.Genshin;component/Control/WPFUIStyle/OverrideStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--#region ConstValues-->
            <FontFamily x:Key="KhaenriahNeueFontFamily">pack://application:,,,/Resources/Font/khaenriahneue.otf#Khaenriah Neue</FontFamily>
            <CornerRadius x:Key="WindowCornerRadius">8</CornerRadius>
            <CornerRadius x:Key="CompatCornerRadius">4</CornerRadius>
            <CornerRadius x:Key="CompatCornerRadiusTop">4,4,0,0</CornerRadius>
            <CornerRadius x:Key="CompatCornerRadiusRight">0,4,4,0</CornerRadius>
            <CornerRadius x:Key="CompatCornerRadiusBottom">0,0,4,4</CornerRadius>
            <CornerRadius x:Key="SmallCompatCornerRadius">2,2,2,2</CornerRadius>

            <ItemsPanelTemplate x:Key="WrapPanelItemsPanel">
                <WrapPanel/>
            </ItemsPanelTemplate>
            <ItemsPanelTemplate x:Key="HorizontalStackPanelItemsPanel">
                <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
            <!--#endregion-->
            
            <!--#region OverrideConst-->
            <FontFamily x:Key="SymbolThemeFontFamily">pack://application:,,,/Resources/Font/SegoeFluentIcons.ttf#Segoe Fluent Icons</FontFamily>
            <sys:Double x:Key="FlyoutThemeMaxWidth">560</sys:Double>
            <sys:Double x:Key="ContentDialogMaxHeight">640</sys:Double>
            <Thickness x:Key="PivotItemMargin">0</Thickness>
            <sys:Double x:Key="PivotHeaderItemFontSize">16</sys:Double>

            <sys:Double x:Key="ContentIconLength">80</sys:Double>

            <SolidColorBrush x:Key="SystemAccentColorDark1Brush" Color="{ui:DynamicColor SystemAccentColorLight1}" />
            <SolidColorBrush x:Key="SystemAccentColorDark2Brush" Color="{ui:DynamicColor SystemAccentColorLight2}" />
            <SolidColorBrush x:Key="SystemAccentColorDark3Brush" Color="{ui:DynamicColor SystemAccentColorLight3}" />
            <SolidColorBrush x:Key="SystemAccentColorLight1Brush" Color="{ui:DynamicColor SystemAccentColorLight1}" />
            <SolidColorBrush x:Key="SystemAccentColorLight2Brush" Color="{ui:DynamicColor SystemAccentColorLight2}" />
            <SolidColorBrush x:Key="SystemAccentColorLight3Brush" Color="{ui:DynamicColor SystemAccentColorLight3}" />

            <!--  Colors depending on the theme should be changed by the Manager  -->
            <Color x:Key="SystemAccentColor">#3379d9</Color>

            <!--  While the name remains Light to stay with the official nomenclature, it's made dark in Dark Theme  -->
            <Color x:Key="SystemAccentColorLight1">#559ce4</Color>
            <Color x:Key="SystemAccentColorLight2">#80b9ee</Color>
            <Color x:Key="SystemAccentColorLight3">#add8ff</Color>
            <!--#endregion-->
            
            <!--#region Texts-->
            <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
                <!--<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}" />-->
                <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="TextTrimming" Value="None" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="LineStackingStrategy" Value="MaxHeight" />
            </Style>
            <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontSize" Value="46" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="SubheaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontSize" Value="34" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="TitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="24" />
            </Style>
            <Style x:Key="SubtitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="20" />
            </Style>
            <Style x:Key="BodyTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="14" />
            </Style>
            <Style x:Key="CaptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <!--#endregion-->
            
            <!--#region Converters-->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityRevertConverter x:Key="BooleanToVisibilityRevertConverter"/>
            <converters:DataVisibilityConverter x:Key="DataVisibilityConverter"/>
            <converters:DataVisibilityRevertConverter x:Key="DataVisibilityRevertConverter"/>
            <converters:BooleanRevertConverter x:Key="BooleanRevertConverter"/>
            <!--#endregion-->

            <!--#region Modefied Styles-->
            <Style TargetType="{x:Type Expander}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="{DynamicResource CompatCornerRadius}" 
                                    SnapsToDevicePixels="True">
                                <DockPanel>
                                    <ToggleButton 
                                        x:Name="HeaderSite" 
                                        ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                        Content="{TemplateBinding Header}" 
                                        DockPanel.Dock="Top" 
                                        Foreground="{TemplateBinding Foreground}" 
                                        ui:FocusVisualHelper.FocusVisualMargin="-3" 
                                        FontWeight="{TemplateBinding FontWeight}" 
                                        FocusVisualStyle="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" 
                                        FontStyle="{TemplateBinding FontStyle}" 
                                        FontStretch="{TemplateBinding FontStretch}" 
                                        FontSize="{TemplateBinding FontSize}" 
                                        FontFamily="{TemplateBinding FontFamily}" 
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Margin="1" 
                                        MinWidth="0" 
                                        MinHeight="0" 
                                        Padding="{TemplateBinding Padding}" 
                                        ui:FocusVisualHelper.UseSystemFocusVisuals="True" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <ControlTemplate.Resources>
                                                                <StreamGeometry x:Key="ChevronDown">M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z</StreamGeometry>
                                                                <StreamGeometry x:Key="ChevronUp">M19.091797,14.970703L10,5.888672 0.908203,14.970703 0.029297,14.091797 10,4.111328 19.970703,14.091797z</StreamGeometry>
                                                            </ControlTemplate.Resources>
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Grid SnapsToDevicePixels="False">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"/>
                                                                        <ColumnDefinition Width="auto"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <ui:FontIconFallback Margin="2,0" Grid.Column="1" x:Name="arrow" Data="M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" SnapsToDevicePixels="False" VerticalAlignment="Center"/>
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="0,0,8,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Data" TargetName="arrow" Value="M19.091797,14.970703L10,5.888672 0.908203,14.970703 0.029297,14.091797 10,4.111328 19.970703,14.091797z"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlPageTextBaseMediumBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlHighlightBaseMediumLowBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <!--Visibility="Collapsed"-->
                                    <ContentPresenter 
                                        x:Name="ExpandSite" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Content="{TemplateBinding Content}" 
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                        DockPanel.Dock="Bottom" 
                                        Focusable="False" 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        Margin="{TemplateBinding Padding}" 
                                        Visibility="Collapsed"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Opacity="0">
                                        <ContentPresenter.LayoutTransform>
                                            <ScaleTransform ScaleY="0"/>
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"                                                 
                                                 To="1"
                                                 Duration="0:0:0.1">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ui:CubicBezierEase EasingMode="EaseIn"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="ExpandSite"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    BeginTime="0:0:0.1"
                                                    Duration="0:0:0.1">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ui:CubicBezierEase EasingMode="EaseIn"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="ExpandSite"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0"
                                                    Duration="0:0:0.1">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ui:CubicBezierEase EasingMode="EaseIn"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="ExpandSite"
                                                    Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                    To="0"
                                                    BeginTime="0:0:0.1"
                                                    Duration="0:0:0.1">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ui:CubicBezierEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <!--<Trigger Property="IsExpanded" Value="True">
                                    
                                </Trigger>-->
                                <Trigger Property="ExpandDirection" Value="Right">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                    <Setter Property="Style" TargetName="HeaderSite">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <ControlTemplate.Resources>
                                                                <StreamGeometry x:Key="ChevronDown">M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z</StreamGeometry>
                                                                <StreamGeometry x:Key="ChevronUp">M19.091797,14.970703L10,5.888672 0.908203,14.970703 0.029297,14.091797 10,4.111328 19.970703,14.091797z</StreamGeometry>
                                                            </ControlTemplate.Resources>
                                                            <Border Padding="{TemplateBinding Padding}">
                                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid>
                                                                        <Grid.LayoutTransform>
                                                                            <TransformGroup>
                                                                                <RotateTransform Angle="-90"/>
                                                                            </TransformGroup>
                                                                        </Grid.LayoutTransform>
                                                                        <ui:FontIconFallback x:Name="arrow" Data="M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" SnapsToDevicePixels="False" VerticalAlignment="Center"/>
                                                                    </Grid>
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Data" TargetName="arrow" Value="M19.091797,14.970703L10,5.888672 0.908203,14.970703 0.029297,14.091797 10,4.111328 19.970703,14.091797z"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlPageTextBaseMediumBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlHighlightBaseMediumLowBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Up">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                    <Setter Property="Style" TargetName="HeaderSite">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <ControlTemplate.Resources>
                                                                <StreamGeometry x:Key="ChevronDown">M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z</StreamGeometry>
                                                                <StreamGeometry x:Key="ChevronUp">M19.091797,14.970703L10,5.888672 0.908203,14.970703 0.029297,14.091797 10,4.111328 19.970703,14.091797z</StreamGeometry>
                                                            </ControlTemplate.Resources>
                                                            <Border Padding="{TemplateBinding Padding}">
                                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid>
                                                                        <Grid.LayoutTransform>
                                                                            <TransformGroup>
                                                                                <RotateTransform Angle="180"/>
                                                                            </TransformGroup>
                                                                        </Grid.LayoutTransform>
                                                                        <ui:FontIconFallback x:Name="arrow" Data="M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" SnapsToDevicePixels="False" VerticalAlignment="Center"/>
                                                                    </Grid>
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="8,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Data" TargetName="arrow" Value="M19.091797,14.970703L10,5.888672 0.908203,14.970703 0.029297,14.091797 10,4.111328 19.970703,14.091797z"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlPageTextBaseMediumBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlHighlightBaseMediumLowBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Left">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                    <Setter Property="Style" TargetName="HeaderSite">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <ControlTemplate.Resources>
                                                                <StreamGeometry x:Key="ChevronDown">M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z</StreamGeometry>
                                                                <StreamGeometry x:Key="ChevronUp">M19.091797,14.970703L10,5.888672 0.908203,14.970703 0.029297,14.091797 10,4.111328 19.970703,14.091797z</StreamGeometry>
                                                            </ControlTemplate.Resources>
                                                            <Border Padding="{TemplateBinding Padding}">
                                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid>
                                                                        <Grid.LayoutTransform>
                                                                            <TransformGroup>
                                                                                <RotateTransform Angle="90"/>
                                                                            </TransformGroup>
                                                                        </Grid.LayoutTransform>
                                                                        <ui:FontIconFallback x:Name="arrow" Data="M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" SnapsToDevicePixels="False" VerticalAlignment="Center"/>
                                                                    </Grid>
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Data" TargetName="arrow" Value="M19.091797,14.970703L10,5.888672 0.908203,14.970703 0.029297,14.091797 10,4.111328 19.970703,14.091797z"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlPageTextBaseMediumBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlHighlightBaseMediumLowBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" TargetName="arrow" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="DefaultListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
                <!--<Setter Property="Padding" Value="0,9,0,12"/>-->
                <Setter Property="Padding" Value="0,4,0,4"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                <Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid HorizontalAlignment="Stretch">
                                    <Rectangle x:Name="PressedBackground" Fill="Transparent" ui:FocusVisualHelper.IsTemplateFocusTarget="True"/>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.FontWeight="Normal" TextElement.FontSize="{DynamicResource ControlContentThemeFontSize}" HorizontalAlignment="Stretch" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!--<Setter Property="Fill" TargetName="PressedBackground" Value="{DynamicResource SystemControlHighlightListLowBrush}"/>-->
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="PressedBackground" Value="{DynamicResource SystemControlHighlightListAccentMediumLowBrush}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="PressedBackground" Value="{DynamicResource SystemControlHighlightListAccentMediumLowBrush}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="PressedBackground" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource DefaultScrollViewerStyle}" TargetType="{x:Type s:SmoothScrollViewer}">
                <Setter Property="PanningMode" Value="Both"/>
            </Style>
            
            <Style TargetType="{x:Type c:CachedImage}">
                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Focusable" Value="False"/>
            </Style>

            <Style x:Key="DefaultContentIconStyle" TargetType="{x:Type ge:ContentIcon}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border 
                                x:Name="border" 
                                CornerRadius="{DynamicResource IconCornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">
                                <ui:ContentPresenterEx 
                                    x:Name="contentPresenter" 
                                    Focusable="False" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" 
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ge:ContentIcon}" BasedOn="{StaticResource DefaultContentIconStyle}"/>
            
            <Style TargetType="{x:Type ui:FontIcon}">
                <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
            </Style>

            <Style x:Key="PivotItemStyle" TargetType="TabItem" BasedOn="{StaticResource TabItemPivotStyle}">
                <Setter Property="Height" Value="40"/>
            </Style>

            <Style TargetType="ui:GridViewItem">
                <Setter Property="Margin" Value="0,0,6,6"/>
            </Style>

            <sys:TimeSpan x:Key="RepositionDelay">0:0:0.033</sys:TimeSpan>
            <KeyTime x:Key="RepositionDuration">0:0:0.367</KeyTime>
            <KeySpline x:Key="RepositionKeySpline">0.1,0.9 0.2,1.0</KeySpline>
            <!--Card ToggleSwitch Style-->
            <Style x:Key="CardToggleSwitchStyle" TargetType="ui:ToggleSwitch">
                <Setter Property="Foreground" Value="{DynamicResource ToggleSwitchContentForeground}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
                <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="-7,-3,-7,-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ui:ToggleSwitch">
                            <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">

                                <VisualStateManager.CustomVisualStateManager>
                                    <ui:SimpleVisualStateManager />
                                </VisualStateManager.CustomVisualStateManager>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ToggleStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" To="On" GeneratedDuration="0">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                        <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="20" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OnToDraggingTransition" From="On" To="Dragging" GeneratedDuration="0">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" To="Off" GeneratedDuration="0">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                        <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OnToOffTransition" From="On" To="Off" GeneratedDuration="0">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                        <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OffToOnTransition" From="Off" To="On" GeneratedDuration="0">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                        <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="20" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Dragging" />
                                        <VisualState x:Name="Off">
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="KnobTranslateTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="On">
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="KnobTranslateTransform"
                                            Storyboard.TargetProperty="X"
                                            To="20"
                                            Duration="0" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ContentStates">
                                        <VisualState x:Name="OffContent">
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="OffContentPresenter"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OnContent">
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="OnContentPresenter"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <ui:ContentPresenterEx
                                x:Name="HeaderContentPresenter"
                                Grid.Row="0"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                TextElement.Foreground="{DynamicResource ToggleSwitchHeaderForeground}"
                                IsHitTestVisible="False"
                                Margin="{DynamicResource ToggleSwitchTopHeaderMargin}"
                                TextWrapping="Wrap"
                                VerticalAlignment="Top"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <!--MinWidth="{DynamicResource ToggleSwitchThemeMinWidth}"-->
                                    <Grid
                                Grid.Row="1"
                                MinWidth="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">

                                        <Grid.RowDefinitions>
                                            <RowDefinition ui:RowDefinitionHelper.PixelHeight="{DynamicResource ToggleSwitchPreContentMargin}" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition ui:RowDefinitionHelper.PixelHeight="{DynamicResource ToggleSwitchPostContentMargin}" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="12" MaxWidth="12" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid x:Name="SwitchAreaGrid" Grid.RowSpan="3" Grid.ColumnSpan="3"
                                    Margin="0,5"
                                    ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                    Background="{DynamicResource ToggleSwitchContainerBackground}" />
                                        <ContentPresenter x:Name="OffContentPresenter" Grid.RowSpan="3" Grid.Column="0"
                                    Opacity="0"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Content="{TemplateBinding OffContent}"
                                    ContentTemplate="{TemplateBinding OffContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ContentPresenter x:Name="OnContentPresenter" Grid.RowSpan="3" Grid.Column="0"
                                    Opacity="0"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Content="{TemplateBinding OnContent}"
                                    ContentTemplate="{TemplateBinding OnContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Rectangle x:Name="OuterBorder" Grid.Row="1" Grid.Column="2"
                                    Height="20"
                                    Width="40"
                                    RadiusX="10"
                                    RadiusY="10"
                                    Fill="{DynamicResource ToggleSwitchFillOff}"
                                    Stroke="{DynamicResource ToggleSwitchStrokeOff}"
                                    StrokeThickness="{DynamicResource ToggleSwitchOuterBorderStrokeThickness}" />
                                        <Rectangle x:Name="SwitchKnobBounds" Grid.Row="1" Grid.Column="2"
                                    Height="20"
                                    Width="40"
                                    RadiusX="10"
                                    RadiusY="10"
                                    Fill="{DynamicResource ToggleSwitchFillOn}"
                                    Stroke="{DynamicResource ToggleSwitchStrokeOn}"
                                    StrokeThickness="{DynamicResource ToggleSwitchOnStrokeThickness}"
                                    Opacity="0" />
                                        <Grid x:Name="SwitchKnob" Grid.Row="1" Grid.Column="2"
                                    HorizontalAlignment="Left"
                                    Width="20"
                                    Height="20">
                                            <Ellipse
                                        x:Name="SwitchKnobOn"
                                        Fill="{DynamicResource ToggleSwitchKnobFillOn}"
                                        Width="10"
                                        Height="10"
                                        Opacity="0" />
                                            <Ellipse
                                        x:Name="SwitchKnobOff"
                                        Fill="{DynamicResource ToggleSwitchKnobFillOff}"
                                        Width="10"
                                        Height="10" />
                                            <Grid.RenderTransform>
                                                <TranslateTransform x:Name="KnobTranslateTransform" />
                                            </Grid.RenderTransform>
                                        </Grid>
                                        <Thumb x:Name="SwitchThumb" Grid.RowSpan="3" Grid.ColumnSpan="3">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Rectangle Fill="Transparent" />
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- PointerOver -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="true" />
                                        <Condition SourceName="SwitchThumb" Property="IsDragging" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffPointerOver}" />
                                    <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffPointerOver}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffPointerOver}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnPointerOver}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnPointerOver}" />
                                    <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnPointerOver}" />
                                    <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundPointerOver}" />
                                </MultiTrigger>
                                <!-- Pressed -->
                                <Trigger SourceName="SwitchThumb" Property="IsDragging" Value="true">
                                    <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffPressed}" />
                                    <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffPressed}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffPressed}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnPressed}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnPressed}" />
                                    <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnPressed}" />
                                    <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundPressed}" />
                                </Trigger>
                                <!-- Disabled -->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="{DynamicResource ToggleSwitchHeaderForegroundDisabled}" />
                                    <Setter Property="TextElement.Foreground" TargetName="OffContentPresenter" Value="{DynamicResource ToggleSwitchContentForegroundDisabled}" />
                                    <Setter Property="TextElement.Foreground" TargetName="OnContentPresenter" Value="{DynamicResource ToggleSwitchContentForegroundDisabled}" />
                                    <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffDisabled}" />
                                    <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffDisabled}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffDisabled}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnDisabled}" />
                                    <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnDisabled}" />
                                    <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnDisabled}" />
                                    <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundDisabled}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <system:String x:Key="ChromeClose">&#xe8bb;</system:String>
            <system:String x:Key="ChromeMinimize">&#xe921;</system:String>
            <system:String x:Key="ChromeMaximize">&#xe922;</system:String>
            <system:String x:Key="ChromeRestore">&#xe923;</system:String>
            <system:String x:Key="ChromeCloseContrast">&#xef2c;</system:String>
            <system:String x:Key="ChromeMinimizeContrast">&#xef2d;</system:String>
            <system:String x:Key="ChromeMaximizeContrast">&#xef2e;</system:String>
            <system:String x:Key="ChromeRestoreContrast">&#xef2f;</system:String>

            <Style x:Key="AppTitleBarStyle" TargetType="ui:TitleBarControl">
                <Setter Property="Height" Value="{DynamicResource {x:Static ui:TitleBar.HeightKey}}" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ui:TitleBarControl">
                            <Grid
                            x:Name="LayoutRoot"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Rectangle
                            x:Name="HighContrastBackground"
                            Grid.ColumnSpan="3"
                            Fill="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                            Visibility="Collapsed" />

                                <StackPanel
                            x:Name="PART_LeftSystemOverlay"
                            Orientation="Horizontal">
                                    <ui:TitleBarButton
                                x:Name="PART_BackButton"
                                Style="{TemplateBinding BackButtonStyle}"
                                Height="{TemplateBinding Height}"
                                IsEnabled="{TemplateBinding IsBackEnabled}"
                                Command="{TemplateBinding BackButtonCommand}"
                                CommandParameter="{TemplateBinding BackButtonCommandParameter}"
                                CommandTarget="{TemplateBinding BackButtonCommandTarget}"
                                IsActive="{TemplateBinding IsActive}"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                AutomationProperties.Name="Back" />
                                </StackPanel>

                                <StackPanel
                                x:Name="IconTitlePanel"
                                Grid.Column="1"
                                Orientation="Horizontal">
                                    <Image
                                x:Name="Icon"
                                Source="{TemplateBinding ActualIcon}"
                                Width="{DynamicResource {x:Static SystemParameters.SmallIconWidthKey}}"
                                Height="{DynamicResource {x:Static SystemParameters.SmallIconHeightKey}}"
                                Margin="10,0,0,0"
                                VerticalAlignment="Center"
                                Visibility="Collapsed" />

                                    <TextBlock
                                    x:Name="Title"
                                    Margin="12,0,12,0"
                                    VerticalAlignment="Center"
                                    FontSize="12"
                                    Background="{x:Null}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Title}"
                                    TextTrimming="CharacterEllipsis">
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform Y="-1" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </StackPanel>

                                <StackPanel
                            x:Name="PART_RightSystemOverlay"
                            Grid.Column="2"
                            Orientation="Horizontal">
                                    <ui:TitleBarButton
                                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                                x:Name="MinimizeButton"
                                Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                                Content="{StaticResource ChromeMinimize}"
                                IsActive="{TemplateBinding IsActive}"
                                Style="{TemplateBinding ButtonStyle}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                AutomationProperties.Name="Minimize" />

                                    <ui:TitleBarButton
                                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                                x:Name="MaximizeRestoreButton"
                                Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                                Content="{StaticResource ChromeMaximize}"
                                IsActive="{TemplateBinding IsActive}"
                                Style="{TemplateBinding ButtonStyle}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                AutomationProperties.Name="Maximize" />

                                    <ui:TitleBarButton
                                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                                x:Name="CloseButton"
                                Command="{x:Static SystemCommands.CloseWindowCommand}"
                                Content="{StaticResource ChromeClose}"
                                IsActive="{TemplateBinding IsActive}"
                                Style="{TemplateBinding ButtonStyle}"
                                HoverBackground="#E81123"
                                HoverForeground="{DynamicResource SystemControlBackgroundChromeWhiteBrush}"
                                PressedBackground="#F1707A"
                                PressedForeground="{DynamicResource SystemControlBackgroundChromeWhiteBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                AutomationProperties.Name="Close" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsActive" Value="False">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="{Binding InactiveBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="HighContrastBackground" Property="Fill" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                                    <Setter TargetName="Title" Property="Foreground" Value="{Binding InactiveForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                                <Trigger Property="ExtendViewIntoTitleBar" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="{x:Null}" />
                                    <Setter TargetName="IconTitlePanel" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsBackButtonVisible" Value="True">
                                    <Setter TargetName="PART_BackButton" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsIconVisible" Value="True">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Title" Property="Margin" Value="5,0,12,0" />
                                </Trigger>
                                <DataTrigger Binding="{Binding WindowStyle, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="ToolWindow">
                                    <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="MaximizeRestoreButton" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="NoResize">
                                    <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="MaximizeRestoreButton" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="CanMinimize">
                                    <Setter TargetName="MaximizeRestoreButton" Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                                    <Setter TargetName="MaximizeRestoreButton" Property="Content" Value="{StaticResource ChromeRestore}" />
                                    <Setter TargetName="MaximizeRestoreButton" Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}" />
                                    <Setter TargetName="MaximizeRestoreButton" Property="AutomationProperties.Name" Value="Restore" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                                    <Setter TargetName="PART_BackButton" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" />
                                    <Setter TargetName="MinimizeButton" Property="Content" Value="{StaticResource ChromeMinimizeContrast}" />
                                    <Setter TargetName="MaximizeRestoreButton" Property="Content" Value="{StaticResource ChromeMaximizeContrast}" />
                                    <Setter TargetName="CloseButton" Property="Content" Value="{StaticResource ChromeCloseContrast}" />
                                    <Setter TargetName="CloseButton" Property="HoverBackground" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                                    <Setter TargetName="CloseButton" Property="HoverForeground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                    <Setter TargetName="CloseButton" Property="PressedBackground" Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
                                    <Setter TargetName="CloseButton" Property="PressedForeground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        <Condition Binding="{Binding ExtendViewIntoTitleBar, RelativeSource={RelativeSource Self}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="HighContrastBackground" Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="MaximizeRestoreButton" Property="Content" Value="{StaticResource ChromeRestoreContrast}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
